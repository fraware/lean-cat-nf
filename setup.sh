#!/bin/bash

# lean-cat-nf Setup Script
# Automatically installs and sets up lean-cat-nf for immediate use

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
REPO_URL="https://github.com/fraware/lean-cat-nf.git"
INSTALL_DIR="$HOME/.local/share/lean-cat-nf"
BIN_DIR="$HOME/.local/bin"

print_header() {
    echo -e "${BLUE}"
    echo "╔══════════════════════════════════════════════════════════╗"
    echo "║                     lean-cat-nf                         ║"
    echo "║           Category Normal Form for Lean 4               ║"
    echo "║                    Setup Script                         ║"
    echo "╚══════════════════════════════════════════════════════════╝"
    echo -e "${NC}"
}

print_step() {
    echo -e "${BLUE}→${NC} $1"
}

print_success() {
    echo -e "${GREEN}✓${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

print_error() {
    echo -e "${RED}✗${NC} $1"
}

check_command() {
    if command -v "$1" >/dev/null 2>&1; then
        return 0
    else
        return 1
    fi
}

install_elan() {
    print_step "Installing elan (Lean version manager)..."
    curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- --default-toolchain none -y
    export PATH="$HOME/.elan/bin:$PATH"
    print_success "elan installed successfully"
}

setup_directories() {
    print_step "Setting up directories..."
    mkdir -p "$BIN_DIR"
    mkdir -p "$(dirname "$INSTALL_DIR")"
    print_success "Directories created"
}

clone_repository() {
    print_step "Cloning lean-cat-nf repository..."
    if [ -d "$INSTALL_DIR" ]; then
        print_warning "Installation directory already exists. Updating..."
        cd "$INSTALL_DIR"
        git pull
    else
        git clone "$REPO_URL" "$INSTALL_DIR"
    fi
    cd "$INSTALL_DIR"
    print_success "Repository cloned/updated"
}

build_project() {
    print_step "Building lean-cat-nf..."
    export PATH="$HOME/.elan/bin:$PATH"
    
    # Install Lean toolchain
    elan toolchain install $(cat lean-toolchain)
    
    # Get dependencies and build
    lake exe cache get || true
    lake build
    
    print_success "Project built successfully"
}

create_wrapper_script() {
    print_step "Creating wrapper script..."
    
    cat > "$BIN_DIR/lean-cat-nf" << EOF
#!/bin/bash
# lean-cat-nf wrapper script
# Generated by setup.sh

export PATH="\$HOME/.elan/bin:\$PATH"
cd "$INSTALL_DIR"

case "\$1" in
  bench)
    shift
    exec lake exe bench "\$@"
    ;;
  test)
    shift
    exec lake exe test-runner "\$@"
    ;;
  test-final)
    shift
    exec lake exe test-runner-final "\$@"
    ;;
  --help|-h|help|"")
    echo "lean-cat-nf - Category Normal Form for Lean 4"
    echo ""
    echo "Usage: lean-cat-nf [command] [options]"
    echo ""
    echo "Commands:"
    echo "  bench        Run benchmarks"
    echo "  test         Run test suite"
    echo "  test-final   Run final test runner"
    echo "  --help       Show this help message"
    echo ""
    echo "Installation directory: $INSTALL_DIR"
    echo "For more information, visit: https://github.com/fraware/lean-cat-nf"
    ;;
  *)
    echo "Unknown command: \$1"
    echo "Use 'lean-cat-nf --help' for usage information"
    exit 1
    ;;
esac
EOF

    chmod +x "$BIN_DIR/lean-cat-nf"
    print_success "Wrapper script created at $BIN_DIR/lean-cat-nf"
}

update_path() {
    print_step "Updating PATH..."
    
    # Check if BIN_DIR is already in PATH
    if [[ ":$PATH:" != *":$BIN_DIR:"* ]]; then
        # Add to shell profile
        for profile in "$HOME/.bashrc" "$HOME/.zshrc" "$HOME/.profile"; do
            if [ -f "$profile" ]; then
                if ! grep -q "$BIN_DIR" "$profile"; then
                    echo "export PATH=\"$BIN_DIR:\$PATH\"" >> "$profile"
                    print_success "Added $BIN_DIR to PATH in $profile"
                fi
            fi
        done
        
        # Update current session
        export PATH="$BIN_DIR:$PATH"
        
        print_warning "Please restart your shell or run: source ~/.bashrc (or ~/.zshrc)"
    else
        print_success "PATH already includes $BIN_DIR"
    fi
}

run_tests() {
    print_step "Running quick tests..."
    export PATH="$BIN_DIR:$PATH"
    
    if lean-cat-nf --help >/dev/null 2>&1; then
        print_success "Installation test passed"
    else
        print_error "Installation test failed"
        return 1
    fi
}

print_completion() {
    echo ""
    echo -e "${GREEN}"
    echo "╔══════════════════════════════════════════════════════════╗"
    echo "║                 Installation Complete!                  ║"
    echo "╚══════════════════════════════════════════════════════════╝"
    echo -e "${NC}"
    echo ""
    echo "lean-cat-nf has been successfully installed!"
    echo ""
    echo "Quick start:"
    echo "  lean-cat-nf --help    # Show help"
    echo "  lean-cat-nf bench     # Run benchmarks"
    echo "  lean-cat-nf test      # Run tests"
    echo ""
    echo "Installation location: $INSTALL_DIR"
    echo "Executable location: $BIN_DIR/lean-cat-nf"
    echo ""
    if [[ ":$PATH:" != *":$BIN_DIR:"* ]]; then
        echo -e "${YELLOW}Note: Please restart your shell or run 'source ~/.bashrc' to use lean-cat-nf from anywhere.${NC}"
    fi
}

show_usage() {
    echo "Usage: $0 [options]"
    echo ""
    echo "Options:"
    echo "  --help, -h     Show this help message"
    echo "  --uninstall    Uninstall lean-cat-nf"
    echo "  --update       Update existing installation"
    echo ""
    echo "This script will:"
    echo "  1. Install elan (Lean version manager) if not present"
    echo "  2. Clone the lean-cat-nf repository"
    echo "  3. Build the project"
    echo "  4. Create a wrapper script in ~/.local/bin"
    echo "  5. Update your PATH"
}

uninstall() {
    print_step "Uninstalling lean-cat-nf..."
    
    # Remove installation directory
    if [ -d "$INSTALL_DIR" ]; then
        rm -rf "$INSTALL_DIR"
        print_success "Removed installation directory"
    fi
    
    # Remove wrapper script
    if [ -f "$BIN_DIR/lean-cat-nf" ]; then
        rm "$BIN_DIR/lean-cat-nf"
        print_success "Removed wrapper script"
    fi
    
    print_success "Uninstallation complete"
}

main() {
    case "${1:-}" in
        --help|-h)
            show_usage
            exit 0
            ;;
        --uninstall)
            print_header
            uninstall
            exit 0
            ;;
        --update)
            print_header
            print_step "Updating lean-cat-nf..."
            ;;
        "")
            print_header
            ;;
        *)
            echo "Unknown option: $1"
            show_usage
            exit 1
            ;;
    esac

    # Check prerequisites
    print_step "Checking prerequisites..."
    
    if ! check_command git; then
        print_error "git is required but not installed"
        exit 1
    fi
    
    if ! check_command curl; then
        print_error "curl is required but not installed"
        exit 1
    fi
    
    print_success "Prerequisites check passed"
    
    # Install elan if needed
    if ! check_command elan; then
        install_elan
    else
        print_success "elan already installed"
        export PATH="$HOME/.elan/bin:$PATH"
    fi
    
    # Setup
    setup_directories
    clone_repository
    build_project
    create_wrapper_script
    update_path
    run_tests
    print_completion
}

# Run main function with all arguments
main "$@"
